// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	SplitNineBit(in=address, a=lsbs, b=msbs);
	DMux8Way(in=load, sel=msbs, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
	RAM64(in=in, load=loada, address=lsbs, out=r1);
	RAM64(in=in, load=loadb, address=lsbs, out=r2);
	RAM64(in=in, load=loadc, address=lsbs, out=r3);
	RAM64(in=in, load=loadd, address=lsbs, out=r4);
	RAM64(in=in, load=loade, address=lsbs, out=r5);
	RAM64(in=in, load=loadf, address=lsbs, out=r6);
	RAM64(in=in, load=loadg, address=lsbs, out=r7);
	RAM64(in=in, load=loadh, address=lsbs, out=r8);
	Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=msbs, out=out);
}