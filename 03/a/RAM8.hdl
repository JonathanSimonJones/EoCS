// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	//Mux16(a=loop, b=in, sel=load, out=mux16out);
	//DMux8Way16(in=mux16out, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
	DMux8Way(in=load, sel=address, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
	Register(in=in, load=loada, out=r1);
	Register(in=in, load=loadb, out=r2);
	Register(in=in, load=loadc, out=r3);
	Register(in=in, load=loadd, out=r4);
	Register(in=in, load=loade, out=r5);
	Register(in=in, load=loadf, out=r6);
	Register(in=in, load=loadg, out=r7);
	Register(in=in, load=loadh, out=r8);
	Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out /*,out=loop*/);
}